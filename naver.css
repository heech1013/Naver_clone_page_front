* {  /* *은 CSS에서 모든 태그를 의미한다. */
  box-sizing: border-box;  /* contents, padding, border 값 다 합쳐서 width, height에서 설정한 값이 됨. 모든 태그를 해당 옵션으로 설정해두는 것이 좋다. */
}

html, body {  /* 브라우저 기본 css 제거 */
  margin: 0;
  padding: 0;
}

.blind {
  /* 네이버의 blind 클래스 그대로 복사한 것임 */
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  margin: -1px;
  width: 1px;
  height: 1px;
}

#fixed {  /* fixed 예시
  * position: fixed;의 경우 컨테이닝 블록은 뷰포트(그냥 화면)나 페이지 영역이다. */
  position: fixed;
  top: 50px;
  right: 50px;
  display: inline-block;
  width: 100px;
  height: 100px;
  border: 1px solid black;
  border-radius: 50px;
}

#header-center {  /* div 태그의 경우에만 div를 생략할 수 있다. */
  margin: 0 auto;  /* 가운데 정렬
  - 속의 컨텐츠가 아니라 구역 자체가 가운데 정렬이 되는 것임.
  - 만약 width를 따로 설정하지 않고 가운데 정렬을 하면 너비 100%의 가운데 정렬이므로 차이가 없게 된다.
    참고할 만한 사이트에서 개발자 도구를 통해 width px을 참고하는 것도 좋을 것 같다. */
  width: 1080px;
  /* px: 상대적인 길이. 모니터 해상도에 따라 상이함. */
}

#header-search a {
  text-decoration: none;  /* a 태그의 글자에 밑줄이 사라짐. */
}

/* #header-center h1 { ...} : 자손(자식 ~ 손자... 고손자 등) 태그 선택(위와 같은 태그 선택). */
#header-search h1 {  /* 꺽쇄: 자식(바로 안에 들어있는 태그. <-> 자손) 선택 */
  width: 198px;
  height: 48px;
  display: inline-block;
  /* '이미지 스프라이트' : 관련된 이미지들을 하나의 이미지 파일로 묶어 사용. 서버 부담을 낮춘다.
    원하는 이미지만 골라 보여주기 위해 height를 잘 조정해야 한다. */
  /* background-image: 컨텐츠 뒤에 이미지 삽입. 여기서는 '네이버'라는 글자 뒤에 네이버 로고가 나타나게 됨. */
  background-image: url(https://s.pstatic.net/static/www/img/uit/2019/sp_search.png);
  /* background-position: 이미지의 세세한 위치 조정. 왼(-)~오(+)px 위(-)~아래(+) */
  background-position: -4px -4px;
  /* text-indent: 텍스트 들여쓰기. display: none;을 할 경우 텍스트 리더기도 읽을 수 없게 되므로
    글자를 보이지 않게 하기 위해 사용한 다른 꼼수. */
  /* background-repeat: no-repeat;  // background-image는 기본적으로 패턴처럼 반복해서 나타남. 이를 방지하기 위해서는 이렇게. */
  text-indent: 100%;  /* h1에게 주어진 공간을 벗어난 바로 직후로 이동 */
  overflow: hidden;  /* text-indent로 인해 넘친 부분을 보이지 않게 한다. */
  vertical-align: middle;  /* vertical-align은 display가 inline, inline-block이어야만 적용된다.
    * a 태그와 input 태그의 높낮이가 달라 정렬이 뒤틀리는 경우가 있다. 이런 경우 세로 정렬을 해서 정리를 해줄 수 있다.
    middle은 그냥 여러 옵션 중에 잘 맞는 거 하나 선택한 것임.
    * 둘 다 설정해주어야 한다.
  */

  /* 로고가 옆의 fieldset에 비해 아주 약간 밑으로 내려가 있음. 이를 조정하기 위함. */
  position: relative;
  top: -6px;
}
/* header의 전체 너비는 1080px, 로고는 280px, 검색창은 520px이지만 나란히 정렬되지 않는다.
  상위 div에 display: block;이 적용되어 있기 때문이다. 컨텐츠의 width가 280px이어도 나머지 부분을
  margin으로 채워서 결국은 width를 100% 차지하게 된다.
  => display: inline-block;으로 설정하면 된다. */

#header-search h2 {
  display: none;
}

#header-search fieldset {
  margin-left: 20px;
  border: 2px solid #03cf5d;
  padding: 12px 0 12px 10px;  /* 시계방향: 위 오른쪽 아래쪽 왼쪽 */
  width: 521px;
  height: 49px;
  display: inline-block;
  
  /* 아래 내용을 맨 위 * {}로 옮겨 모든 태그에 적용될 수 있도록 한다.
  box-sizing: content-box;  // 기본 설정 값. width와 height이 contents 값이고, padding과 border 값이 또 따로 들어가서 의도한 것보다 훨씬 크게 만들어지곤 한다.
  box-sizing: border-box;  /* contents, padding, border 값 다 합쳐서 521px * 49px가 됨.
  */

  /* button에 position: absolute;를 적용했고, right: 0; top: 0; 인 상태.
  이 곳에 position: relative;를 붙여줌으로써 브라우저 우측 상단이 아니라 fieldset 끝으로 붙게 된다. */
  position: relative;
}

#header-search fieldset input {
  /* <input/> 에 아무런 CSS를 설정하지 않아도 브라우저 자체에서 기본으로 CSS를 적용한다(padding 1px, border 2px 등..)
    하지만 브라우저마다 다르게 적용되기 때문에 없애주는 것이 좋다.
    reset.css나 normalize.css 등의 라이브러리가 있다. */
  outline: none;  /* 클릭이나 입력 시 뜨는 파란 테두리를 없앤다. (이것 또한 브라우저 기본 CSS) */
  border: none;  /* input의 기본 테두리 */
  vertical-align: top;  /* vertical-align은 display가 inline, inline-block이어야만 적용된다.
    * 기본적으로는 vertical-align이 baseline이다(원래 작동 결과?가 매우 애매하다고 한다)
    * a 태그와 input 태그의 높낮이가 달라 정렬이 뒤틀리는 경우가 있다. 이런 경우 세로 정렬을 해서 정리를 해줄 수 있다.
    middle은 그냥 여러 옵션 중에 잘 맞는 거 하나 선택한 것임.
    * 둘 다 설정해주어야 한다.
  */
  /* input은 기본적으로 display가 inline-block이다(width랑 height가 잘 적용됨).
    해당 사실을 외울 필요는 없고, 크롬 개발자 도구의 CSS 부분에서 아래로 내리면 'user-agent stylesheet'라고 있다.
    그게 브라우저가 기본으로 적용하는 CSS를 말함. */
  width: 405px;
  height: 23px;

  
}

#header-search fieldset button {
  width: 49px;
  height: 49px;

  border: none;  /* 브라우저 기본 CSS 없애주기*/
  padding: 0;  /* 브라우저 기본 CSS 없 애주기*/
  
  background: #03cf5d;
  
  /* 원래 그 자리에 있어야 할 것을 다른 곳으로 옮기는 것 -> position */
  position: absolute;
  right: -2px;
  top: -2px;  /* -> 이러면 브라우저 젤 오른쪽 젤 위에 붙게 된다. 원하는 건 fieldset의 끝에 붙는 것.
    -> fieldset 부분에 position: relative;를 붙여준다.
    우선 붙이고, 미세한 px 조정. */
}

#search-image {
  background-image: url(https://s.pstatic.net/static/www/img/uit/2019/sp_search.png);
  background-position: -3px -60px;
  background-repeat: no-repeat;
  width: 21px;
  height: 21px;
  /* span은 기본적으로 display: inline; 컨텐츠 영역만큼만 차지하기 때문에 가로세로를 지정할 수 없음.
    inline-block으로 바꾸면 가로세로가 생김.*/
  display: inline-block;
  margin: 14px;  /* <span>이 정 가운데에 있지 않다 -> 맞추는 방법은 여러가지가 있지만, position을 배우지 않은 상태에서는 선택지가 그렇게 많지 않다. */
}

/* 컨테이닝 블록과 position: relative; / absolute;
 * 컨테이닝 블록: MDN 공식문서 참고, 예시 보며 익혀야..
 * 기본 default 값:: position: static;  // 왼쪽에서 오른쪽, 위에서 아래.
 * position: relative; :: 여기서 상대적이라는 말은 static일 때의 위치로부터의 상대적인 위치임. (top, left...)
 * position: absolute; :: 화면을 기준으로 위치를 결정.
  absolute 옵션에는 한 가지 규칙이 있다: 컨테이닝 블록이 position: static(default)이 아니고 fixed/absolute/relative/sticky 인 가장 가까운 조상의 내부 여백 영역이다.
  즉 position: static이 아닌 조상이 없으면 최상단 html까지 올라가서 겉보기에 화면을 기준으로 붙게 되는 것이고,
  만약 예를 들어 위처럼 search button이 fieldset을 기준으로 붙게 하고 싶다면 fieldset을 position: static이 아닌 옵션 중 하나로 변경하면 되는 것이다(위의 경우는 relative)
*/